{
  "pluginAlias": "SwitchBot",
  "pluginType": "platform",
  "singular": true,
  "customUi": true,
  "headerDisplay": "<p align='center'><img width='100px' src='https://user-images.githubusercontent.com/9875439/102681754-ac2eb800-4189-11eb-8e17-7c47c804484b.png'></p>\n\nThe **SwitchBot** plugin allows you to control SwitchBot Devices. \n\nTo get started link your SwtichBot account.\nTo get started link your SwtichBot account.\n\n1. Download SwitchBot App on App Store or Google Play Store.\n\n2. Register a SwitchBot account and log in into your account.\n\n3. Generate an Open Token within the App.\n\n4. Input your `Open Token` into the paramter below.",
  "footerDisplay": "Please raise any issues on our [project page](https://github.com/OpenWonderLabs/homebridge-switchbot/issues).\n\nIf you would like to have other SwitchBot Devices added to this plugin fill out [Feature Request Form](https://github.com/OpenWonderLabs/homebridge-switchbot/issues/new?assignees=&labels=&template=feature_request.md).\n\n[SwitchBot Website](https://www.switch-bot.com)",
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "title": "Name",
        "default": "SwitchBot",
        "required": true
      },
      "credentials": {
        "type": "object",
        "properties": {
          "openToken": {
            "title": "Token",
            "type": "string",
            "required": true,
            "x-schema-form": {
              "type": "password"
            }
          },
          "notice": {
            "title": "Notice",
            "type": "string",
            "required": true,
            "default": "Keep your token a secret!"
          }
        }
      },
      "options": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "title": "Devices",
              "type": "object",
              "properties": {
                "deviceId": {
                  "title": "Device ID",
                  "type": "string",
                  "placeholder": "81F3UT59513F"
                },
                "configDeviceName": {
                  "title": "Device Name",
                  "type": "string",
                  "placeholder": "SwitchBot",
                  "condition": {
                    "functionBody": "return (model.options && model.options.devices && model.options.devices[arrayIndices].deviceId && model.options.devices[arrayIndices].ble);"
                  }
                },
                "hide_device": {
                  "title": "Hide Device",
                  "type": "boolean",
                  "condition": {
                    "functionBody": "return (model.options && model.options.devices && model.options.devices[arrayIndices].deviceId);"
                  }
                },
                "configDeviceType": {
                  "title": "Device Type",
                  "type": "string",
                  "oneOf": [
                    {
                      "title": "Bot",
                      "enum": [
                        "Bot"
                      ]
                    },
                    {
                      "title": "Curtain",
                      "enum": [
                        "Curtain"
                      ]
                    },
                    {
                      "title": "Plug",
                      "enum": [
                        "Plug"
                      ]
                    },
                    {
                      "title": "Meter",
                      "enum": [
                        "Meter"
                      ]
                    },
                    {
                      "title": "Motion Sensor",
                      "enum": [
                        "Motion Sensor"
                      ]
                    },
                    {
                      "title": "Contact Sensor",
                      "enum": [
                        "Contact Sensor"
                      ]
                    },
                    {
                      "title": "Color Bulb",
                      "enum": [
                        "Color Bulb"
                      ]
                    },
                    {
                      "title": "Humidifier",
                      "enum": [
                        "Humidifier"
                      ]
                    },
                    {
                      "title": "Smart Fan",
                      "enum": [
                        "Smart Fan"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.options && model.options.devices && model.options.devices[arrayIndices].deviceId && !model.options.devices[arrayIndices].hide_device);"
                  }
                },
                "ble": {
                  "title": "Enable Bluetooth Low Energy (BLE) Connection",
                  "type": "boolean",
                  "condition": {
                    "functionBody": "return (model.options && model.options.devices && model.options.devices[arrayIndices].deviceId && !model.options.devices[arrayIndices].hide_device);"
                  }
                },
                "bot": {
                  "type": "object",
                  "properties": {
                    "mode": {
                      "title": "Mode",
                      "type": "string",
                      "oneOf": [
                        {
                          "title": "Press",
                          "enum": [
                            "press"
                          ]
                        },
                        {
                          "title": "Switch",
                          "enum": [
                            "switch"
                          ]
                        }
                      ],
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Bot' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "deviceType": {
                      "title": "What Type of Device do you want to display in the Home App?",
                      "type": "string",
                      "oneOf": [
                        {
                          "title": "Outlet",
                          "enum": [
                            "outlet"
                          ]
                        },
                        {
                          "title": "Switch",
                          "enum": [
                            "switch"
                          ]
                        }
                      ],
                      "placeholder": "outlet",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Bot' && model.options.devices[arrayIndices].deviceId && model.options.devices[arrayIndices].bot && model.options.devices[arrayIndices].bot.mode);"
                      }
                    }
                  }
                },
                "meter": {
                  "type": "object",
                  "properties": {
                    "hide_temperature": {
                      "title": "Hide Meter's Temperature Sensor",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Meter' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "hide_humidity": {
                      "title": "Hide Meter's Humidity Sensor",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Meter' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "unit": {
                      "title": "Convert your Meter's Temperature to Celsius or Fahrenheit",
                      "type": "number",
                      "oneOf": [
                        {
                          "title": "Celsius",
                          "enum": [
                            0
                          ]
                        },
                        {
                          "title": "Fahrenheit",
                          "enum": [
                            1
                          ]
                        }
                      ],
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Meter' && model.options.devices[arrayIndices].deviceId && model.options.devices[arrayIndices].meter  && !model.options.devices[arrayIndices].meter.hide_temperature);"
                      }
                    }
                  }
                },
                "humidifier": {
                  "type": "object",
                  "properties": {
                    "hide_temperature": {
                      "title": "Hide Humidifier's Temperature Sensor",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Humidifier' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "set_minStep": {
                      "title": "Set Min Step",
                      "type": "number",
                      "placeholder": "1",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Humidifier' && model.options.devices[arrayIndices].deviceId);"
                      }
                    }
                  }
                },
                "curtain": {
                  "type": "object",
                  "properties": {
                    "set_minStep": {
                      "title": "Set Minimum Step",
                      "type": "number",
                      "placeholder": "1",
                      "description": "Sets the minimum steps that curtain allows. So if set to 20, it would allow you to set the curtain state to 0, 20, 40, 60, 80, and 100",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "set_min": {
                      "title": "Set Minimum Open State",
                      "type": "number",
                      "placeholder": "0",
                      "description": "Sets the minimum percentage before needed to set Curtain to Open",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "set_max": {
                      "title": "Set Maximum Close State",
                      "type": "number",
                      "placeholder": "100",
                      "description": "Sets the maximum percentage before needing to set Curtain to Closed",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "refreshRate": {
                      "title": "Refresh Rate",
                      "type": "number",
                      "minimum": 1,
                      "placeholder": 5,
                      "description": "Indicates the number of seconds between before refreshing Curtain status while updating slide progress.",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "disable_group": {
                      "title": "Disable Grouping",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "hide_lightsensor": {
                      "title": "Hide Curtain's Light Sensor",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "set_minlux": {
                      "title": "Set Min Lux",
                      "type": "number",
                      "placeholder": "1",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId && !model.options.devices[arrayIndices].curtain.hide_lightsensor);"
                      }
                    },
                    "set_maxlux": {
                      "title": "Set Max Lux",
                      "type": "number",
                      "placeholder": "6001",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Curtain' && model.options.devices[arrayIndices].deviceId && !model.options.devices[arrayIndices].curtain.hide_lightsensor);"
                      }
                    }
                  }
                },
                "contact": {
                  "type": "object",
                  "properties": {
                    "hide_lightsensor": {
                      "title": "Hide Curtains's Light Sensor",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Contact Sensor' && model.options.devices[arrayIndices].deviceId);"
                      }
                    },
                    "hide_motionsensor": {
                      "title": "Hide Curtains's Motion Sensor",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Contact Sensor' && model.options.devices[arrayIndices].deviceId);"
                      }
                    }
                  }
                },
                "colorbulb": {
                  "type": "object",
                  "properties": {
                    "set_minStep": {
                      "title": "Set Min Step",
                      "type": "number",
                      "placeholder": "1",
                      "condition": {
                        "functionBody": "return (model.options && model.options.devices && !model.options.devices[arrayIndices].hide_device && model.options.devices[arrayIndices].configDeviceType === 'Color Bulb' && model.options.devices[arrayIndices].deviceId);"
                      }
                    }
                  }
                }
              }
            }
          },
          "irdevices": {
            "type": "array",
            "items": {
              "title": "IR Devices",
              "type": "object",
              "properties": {
                "deviceId": {
                  "title": "Device ID",
                  "type": "string",
                  "placeholder": "81F3UT59513F"
                },
                "hide_device": {
                  "title": "Hide Device",
                  "type": "boolean",
                  "condition": {
                    "functionBody": "return (model.options && model.options.irdevices && model.options.irdevices[arrayIndices].deviceId);"
                  }
                },
                "configRemoteType": {
                  "title": "Remote Type",
                  "type": "string",
                  "oneOf": [
                    {
                      "title": "Air Conditioner (IR)",
                      "enum": [
                        "Air Conditioner"
                      ]
                    },
                    {
                      "title": "DIY Air Conditioner (IR)",
                      "enum": [
                        "DIY Air Conditioner"
                      ]
                    },
                    {
                      "title": "TV (IR)",
                      "enum": [
                        "TV"
                      ]
                    },
                    {
                      "title": "DIY TV (IR)",
                      "enum": [
                        "DIY TV"
                      ]
                    },
                    {
                      "title": "Light (IR)",
                      "enum": [
                        "Light"
                      ]
                    },
                    {
                      "title": "DIY Light (IR)",
                      "enum": [
                        "DIY Light"
                      ]
                    },
                    {
                      "title": "IPTV (IR)",
                      "enum": [
                        "IPTV"
                      ]
                    },
                    {
                      "title": "DIY IPTV (IR)",
                      "enum": [
                        "DIY IPTV"
                      ]
                    },
                    {
                      "title": "Set Top Box (IR)",
                      "enum": [
                        "Set Top Box"
                      ]
                    },
                    {
                      "title": "DIY Set Top Box (IR)",
                      "enum": [
                        "DIY Set Top Box"
                      ]
                    },
                    {
                      "title": "DVD (IR)",
                      "enum": [
                        "DVD"
                      ]
                    },
                    {
                      "title": "DIY DVD (IR)",
                      "enum": [
                        "DIY DVD"
                      ]
                    },
                    {
                      "title": "Fan (IR)",
                      "enum": [
                        "Fan"
                      ]
                    },
                    {
                      "title": "DIY Fan (IR)",
                      "enum": [
                        "DIY Fan"
                      ]
                    },
                    {
                      "title": "Projector (IR)",
                      "enum": [
                        "Projector"
                      ]
                    },
                    {
                      "title": "DIY Projector (IR)",
                      "enum": [
                        "DIY Projector"
                      ]
                    },
                    {
                      "title": "Camera (IR)",
                      "enum": [
                        "Camera"
                      ]
                    },
                    {
                      "title": "DIY Camera (IR)",
                      "enum": [
                        "DIY Camera"
                      ]
                    },
                    {
                      "title": "Air Purifier (IR)",
                      "enum": [
                        "Air Purifier"
                      ]
                    },
                    {
                      "title": "DIY Air Purifier (IR)",
                      "enum": [
                        "DIY Air Purifier"
                      ]
                    },
                    {
                      "title": "Speaker (IR)",
                      "enum": [
                        "Speaker"
                      ]
                    },
                    {
                      "title": "DIY Speaker (IR)",
                      "enum": [
                        "DIY Speaker"
                      ]
                    },
                    {
                      "title": "Water Heater (IR)",
                      "enum": [
                        "Water Heater"
                      ]
                    },
                    {
                      "title": "DIY Water Heater (IR)",
                      "enum": [
                        "DIY Water Heater"
                      ]
                    },
                    {
                      "title": "Vacuum Cleaner (IR)",
                      "enum": [
                        "Vacuum Cleaner"
                      ]
                    },
                    {
                      "title": "DIY Vacuum Cleaner (IR)",
                      "enum": [
                        "DIY Vacuum Cleaner"
                      ]
                    },
                    {
                      "title": "Others (IR)",
                      "enum": [
                        "Others"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.options && model.options.irdevices && model.options.irdevices[arrayIndices].deviceId && !model.options.irdevices[arrayIndices].hide_device);"
                  }
                },
                "irair": {
                  "type": "object",
                  "properties": {
                    "hide_automode": {
                      "title": "Hide Auto Mode on IR Air Conditioners",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && (model.options.irdevices[arrayIndices].configRemoteType === 'Air Conditioner' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Air Conditioner') && model.options.irdevices[arrayIndices].deviceId);"
                      }
                    }
                  }
                },
                "irfan": {
                  "type": "object",
                  "properties": {
                    "swing_mode": {
                      "title": "Enable Swing Mode by Device ID",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && (model.options.irdevices[arrayIndices].configRemoteType === 'Fan' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Fan') && model.options.irdevices[arrayIndices].deviceId);"
                      }
                    },
                    "rotation_speed": {
                      "title": "Enable Rotation Speed by Device ID",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && (model.options.irdevices[arrayIndices].configRemoteType === 'Fan' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Fan') && model.options.irdevices[arrayIndices].deviceId);"
                      }
                    },
                    "set_minStep": {
                      "title": "Set Min Step",
                      "type": "number",
                      "placeholder": "1",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && (model.options.irdevices[arrayIndices].configRemoteType === 'Fan' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Fan') && model.options.irdevices[arrayIndices].deviceId && model.options.irdevices[arrayIndices].irfan  && !model.options.irdevices[arrayIndices].irfan.rotation_speed);"
                      }
                    },
                    "set_min": {
                      "title": "Set Min",
                      "type": "number",
                      "placeholder": "0",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && (model.options.irdevices[arrayIndices].configRemoteType === 'Fan' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Fan') && model.options.irdevices[arrayIndices].deviceId && model.options.irdevices[arrayIndices].irfan  && !model.options.irdevices[arrayIndices].irfan.rotation_speed);"
                      }
                    },
                    "set_max": {
                      "title": "Set Max",
                      "type": "number",
                      "placeholder": "100",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && (model.options.irdevices[arrayIndices].configRemoteType === 'Fan' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Fan') && model.options.irdevices[arrayIndices].deviceId && model.options.irdevices[arrayIndices].irfan  && !model.options.irdevices[arrayIndices].irfan.rotation_speed);"
                      }
                    }
                  }
                },
                "irtv": {
                  "type": "object",
                  "properties": {
                    "disable_power": {
                      "title": "Disable Power Command",
                      "type": "boolean",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && (model.options.irdevices[arrayIndices].configRemoteType === 'TV' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY TV' || model.options.irdevices[arrayIndices].configRemoteType === 'Projector' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Projector' || model.options.irdevices[arrayIndices].configRemoteType === 'Set Top Box' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Set Top Box' || model.options.irdevices[arrayIndices].configRemoteType === 'IPTV' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY IPTV' || model.options.irdevices[arrayIndices].configRemoteType === 'DVD' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY DVD' || model.options.irdevices[arrayIndices].configRemoteType === 'Speaker' || model.options.irdevices[arrayIndices].configRemoteType === 'DIY Speaker') && model.options.irdevices[arrayIndices].deviceId);"
                      }
                    }
                  }
                },
                "other": {
                  "type": "object",
                  "properties": {
                    "deviceType": {
                      "title": "What Type of Device do you want to display in the Home App?",
                      "type": "string",
                      "oneOf": [
                        {
                          "title": "Fan",
                          "enum": [
                            "Fan"
                          ]
                        }
                      ],
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && model.options.irdevices[arrayIndices].configRemoteType === 'Others' && model.options.irdevices[arrayIndices].deviceId);"
                      }
                    },
                    "commandOn": {
                      "title": "Command sent to turn On Device.",
                      "type": "string",
                      "placeholder": "On",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && model.options.irdevices[arrayIndices].configRemoteType === 'Others' && model.options.irdevices[arrayIndices].deviceId && model.options.irdevices[arrayIndices].other  && model.options.irdevices[arrayIndices].other.deviceType);"
                      }
                    },
                    "commandOff": {
                      "title": "Command sent to turn Off Device.",
                      "type": "string",
                      "placeholder": "Off",
                      "condition": {
                        "functionBody": "return (model.options && model.options.irdevices && !model.options.irdevices[arrayIndices].hide_device && model.options.irdevices[arrayIndices].configRemoteType === 'Others' && model.options.irdevices[arrayIndices].deviceId && model.options.irdevices[arrayIndices].other  && !model.options.irdevices[arrayIndices].other.deviceType);"
                      }
                    }
                  }
                }
              }
            }
          },
          "refreshRate": {
            "title": "Refresh Rate",
            "type": "number",
            "minimum": 30,
            "placeholder": 360,
            "description": "Indicates the number of seconds between polls of SwitchBot API."
          },
          "pushRate": {
            "title": "Push Rate",
            "type": "number",
            "placeholder": 1,
            "description": "Indicates the number of seconds between pushes to SwitchBot API."
          },
          "debug": {
            "title": "Logging Setting",
            "type": "string",
            "description": "Enable 'Device' or 'Debug' logging.",
            "oneOf": [
              {
                "title": "Enable Debug Logging",
                "enum": [
                  "debug"
                ]
              },
              {
                "title": "Enable Device Logging",
                "enum": [
                  "device"
                ]
              }
            ]
          }
        }
      }
    }
  },
  "layout": [
    {
      "type": "fieldset",
      "title": "SwitchBot Account Info",
      "expandable": true,
      "expanded": false,
      "items": [
        "credentials.openToken"
      ]
    },
    {
      "key": "options.devices",
      "notitle": false,
      "add": "Add Another Device",
      "type": "fieldset",
      "title": "Optional SwitchBot Device Settings",
      "expandable": true,
      "expanded": false,
      "orderable": false,
      "buttonText": "Add Device",
      "items": [
        {
          "type": "div",
          "displayFlex": true,
          "flex-direction": "column",
          "items": [
            "options.devices[].configDeviceName",
            "options.devices[].deviceId",
            "options.devices[].hide_device",
            "options.devices[].ble",
            "options.devices[].configDeviceType",
            "options.devices[].bot.mode",
            "options.devices[].bot.deviceType",
            "options.devices[].meter.hide_temperature",
            "options.devices[].meter.hide_humidity",
            "options.devices[].meter.unit",
            "options.devices[].humidifier.set_minStep",
            "options.devices[].humidifier.hide_temperature",
            "options.devices[].curtain.set_minStep",
            "options.devices[].curtain.set_min",
            "options.devices[].curtain.set_max",
            "options.devices[].curtain.refreshRate",
            "options.devices[].curtain.disable_group",
            "options.devices[].curtain.hide_lightsensor",
            "options.devices[].curtain.set_minlux",
            "options.devices[].curtain.set_maxlux",
            "options.devices[].contact.hide_lightsensor",
            "options.devices[].contact.hide_motionsensor",
            "options.devices[].colorbulb.set_minStep"
          ]
        }
      ]
    },
    {
      "key": "options.irdevices",
      "notitle": false,
      "add": "Add Another IR Device",
      "type": "fieldset",
      "title": "Optional IR Device Settings",
      "expandable": true,
      "expanded": false,
      "orderable": false,
      "buttonText": "Add IR Device",
      "items": [
        {
          "type": "div",
          "displayFlex": true,
          "flex-direction": "column",
          "items": [
            "options.irdevices[].deviceId",
            "options.irdevices[].hide_device",
            "options.irdevices[].configRemoteType",
            "options.irdevices[].irair.hide_automode",
            "options.irdevices[].irfan.rotation_speed",
            "options.irdevices[].irfan.swing_mode",
            "options.irdevices[].irfan.set_minStep",
            "options.irdevices[].irfan.set_min",
            "options.irdevices[].irfan.set_max",
            "options.irdevices[].irtv.disable_power",
            "options.irdevices[].other.deviceType",
            "options.irdevices[].other.commandOn",
            "options.irdevices[].other.commandOff"
          ]
        }
      ]
    },
    {
      "type": "fieldset",
      "title": "Advanced Settings",
      "expandable": true,
      "expanded": false,
      "items": [
        {
          "type": "help",
          "helpvalue": "<h5>Refresh Rate</h5><em class='primary-text'>Refresh Rate indicates the number of seconds between polls of SwitchBot API.</em>"
        },
        {
          "key": "options.refreshRate",
          "notitle": true
        },
        {
          "type": "help",
          "helpvalue": "<h5>Push Rate</h5><em class='primary-text'>Push Rate indicates the number of seconds between pushes to SwitchBot API, Currently only for Curtains.</em>"
        },
        {
          "key": "options.pushRate",
          "notitle": true
        },
        "options.debug"
      ]
    }
  ]
}